// @generated by protobuf-ts 2.7.0 with parameter ts_nocheck,long_type_number,generate_dependencies
// @generated from protobuf file "template.proto" (package "template_service", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TemplateService } from "./template";
import type { HelloWorldResponse } from "./template";
import type { HelloWorldRequest } from "./template";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PingResponse } from "./template";
import type { PingRequest } from "./template";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service template_service.TemplateService
 */
export interface ITemplateServiceClient {
    /**
     * @generated from protobuf rpc: Ping(template_service.PingRequest) returns (template_service.PingResponse);
     */
    ping(input: PingRequest, options?: RpcOptions): UnaryCall<PingRequest, PingResponse>;
    /**
     * @generated from protobuf rpc: HelloWorld(template_service.HelloWorldRequest) returns (template_service.HelloWorldResponse);
     */
    helloWorld(input: HelloWorldRequest, options?: RpcOptions): UnaryCall<HelloWorldRequest, HelloWorldResponse>;
}
/**
 * @generated from protobuf service template_service.TemplateService
 */
export class TemplateServiceClient implements ITemplateServiceClient, ServiceInfo {
    typeName = TemplateService.typeName;
    methods = TemplateService.methods;
    options = TemplateService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Ping(template_service.PingRequest) returns (template_service.PingResponse);
     */
    ping(input: PingRequest, options?: RpcOptions): UnaryCall<PingRequest, PingResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PingRequest, PingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: HelloWorld(template_service.HelloWorldRequest) returns (template_service.HelloWorldResponse);
     */
    helloWorld(input: HelloWorldRequest, options?: RpcOptions): UnaryCall<HelloWorldRequest, HelloWorldResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<HelloWorldRequest, HelloWorldResponse>("unary", this._transport, method, opt, input);
    }
}
